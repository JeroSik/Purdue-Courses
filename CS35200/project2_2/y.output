Terminals unused in grammar

   EXCLAMATION
   EXTENDS
   MINUS_MINUS
   PLUS_PLUS
   RETURN
   THIS


State 26 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: MainClass

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    3 VarDecl: Type ID VarInit VarDeclTail SEMICOLON

    4 VarInit: %empty
    5        | EQUALS Exp

    6 VarDeclTail: %empty
    7            | COMMA ID VarInit VarDeclTail

    8 PrimeType: INT
    9          | BOOLEAN
   10          | STRING

   11 Type: PrimeType
   12     | ID
   13     | Type OPEN_BRACKET CLOSED_BRACKET

   14 StatementList: %empty
   15              | Statement StatementList

   16 Statement: SYSTEM_OUT_PRINTLN OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON
   17          | SYSTEM_OUT_PRINT OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON
   18          | VarDecl
   19          | ID EQUALS Exp SEMICOLON
   20          | LeftValue EQUALS Exp SEMICOLON
   21          | IF OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement ELSE Statement
   22          | WHILE OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement
   23          | OPEN_CURLY StatementList CLOSED_CURLY

   24 Exp: LogicalOrExp

   25 LogicalOrExp: LogicalOrExp OR LogicalAndExp
   26             | LogicalAndExp

   27 LogicalAndExp: LogicalAndExp AND EqualityExp
   28              | EqualityExp

   29 EqualityExp: EqualityExp EQUAL_EQUAL RelationalExp
   30            | EqualityExp NOT_EQUAL RelationalExp
   31            | RelationalExp

   32 RelationalExp: RelationalExp GREATER AdditiveExp
   33              | RelationalExp GREATER_EQUAL AdditiveExp
   34              | RelationalExp LESS AdditiveExp
   35              | RelationalExp LESS_EQUAL AdditiveExp
   36              | AdditiveExp

   37 AdditiveExp: AdditiveExp PLUS MultiplicativeExp
   38            | AdditiveExp MINUS MultiplicativeExp
   39            | MultiplicativeExp

   40 MultiplicativeExp: MultiplicativeExp MULTIPLY UnaryExp
   41                  | MultiplicativeExp DIVIDE UnaryExp
   42                  | UnaryExp

   43 UnaryExp: PLUS Factor
   44         | MINUS Factor
   45         | Factor

   46 Factor: OPEN_PARENTHESES Exp CLOSED_PARENTHESES
   47       | ID
   48       | LeftValue
   49       | NEW PrimeType Index
   50       | LeftValue DOT LENGTH
   51       | ID DOT LENGTH
   52       | STRING_LITERAL
   53       | INTEGER_LITERAL
   54       | TRUE
   55       | FALSE

   56 LeftValue: ID Index

   57 Index: OPEN_BRACKET Exp CLOSED_BRACKET
   58      | Index OPEN_BRACKET Exp CLOSED_BRACKET


Terminals, with rules where they appear

$end (0) 0
error (256)
AND (258) 27
BOOLEAN (259) 9
CLASS (260) 2
CLOSED_BRACKET (261) 2 13 57 58
CLOSED_CURLY (262) 2 23
CLOSED_PARENTHESES (263) 2 16 17 21 22 46
COMMA (264) 7
DIVIDE (265) 41
DOT (266) 50 51
ELSE (267) 21
EQUALS (268) 5 19 20
EQUAL_EQUAL (269) 29
EXCLAMATION (270)
EXTENDS (271)
FALSE (272) 55
GREATER (273) 32
GREATER_EQUAL (274) 33
IF (275) 21
INT (276) 8
LENGTH (277) 50 51
LESS (278) 34
LESS_EQUAL (279) 35
MAIN (280) 2
MINUS (281) 38 44
MINUS_MINUS (282)
MULTIPLY (283) 40
NEW (284) 49
NOT_EQUAL (285) 30
OPEN_BRACKET (286) 2 13 57 58
OPEN_CURLY (287) 2 23
OPEN_PARENTHESES (288) 2 16 17 21 22 46
OR (289) 25
PLUS (290) 37 43
PLUS_PLUS (291)
PUBLIC (292) 2
RETURN (293)
SEMICOLON (294) 3 16 17 19 20
STATIC (295) 2
STRING (296) 2 10
SYSTEM_OUT_PRINT (297) 17
SYSTEM_OUT_PRINTLN (298) 16
THIS (299)
TRUE (300) 54
VOID (301) 2
WHILE (302) 22
INTEGER_LITERAL (303) 53
STRING_LITERAL (304) 52
ID (305) 2 3 7 12 19 47 51 56


Nonterminals, with rules where they appear

$accept (51)
    on left: 0
Program (52)
    on left: 1, on right: 0
MainClass (53)
    on left: 2, on right: 1
VarDecl (54)
    on left: 3, on right: 18
VarInit (55)
    on left: 4 5, on right: 3 7
VarDeclTail (56)
    on left: 6 7, on right: 3 7
PrimeType (57)
    on left: 8 9 10, on right: 11 49
Type (58)
    on left: 11 12 13, on right: 3 13
StatementList (59)
    on left: 14 15, on right: 2 15 23
Statement (60)
    on left: 16 17 18 19 20 21 22 23, on right: 15 21 22
Exp (61)
    on left: 24, on right: 5 16 17 19 20 21 22 46 57 58
LogicalOrExp (62)
    on left: 25 26, on right: 24 25
LogicalAndExp (63)
    on left: 27 28, on right: 25 26 27
EqualityExp (64)
    on left: 29 30 31, on right: 27 28 29 30
RelationalExp (65)
    on left: 32 33 34 35 36, on right: 29 30 31 32 33 34 35
AdditiveExp (66)
    on left: 37 38 39, on right: 32 33 34 35 36 37 38
MultiplicativeExp (67)
    on left: 40 41 42, on right: 37 38 39 40 41
UnaryExp (68)
    on left: 43 44 45, on right: 40 41 42
Factor (69)
    on left: 46 47 48 49 50 51 52 53 54 55, on right: 43 44 45
LeftValue (70)
    on left: 56, on right: 20 48 50
Index (71)
    on left: 57 58, on right: 49 56 58


State 0

    0 $accept: . Program $end

    CLASS  shift, and go to state 1

    Program    go to state 2
    MainClass  go to state 3


State 1

    2 MainClass: CLASS . ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    ID  shift, and go to state 4


State 2

    0 $accept: Program . $end

    $end  shift, and go to state 5


State 3

    1 Program: MainClass .

    $default  reduce using rule 1 (Program)


State 4

    2 MainClass: CLASS ID . OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 6


State 5

    0 $accept: Program $end .

    $default  accept


State 6

    2 MainClass: CLASS ID OPEN_CURLY . PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    PUBLIC  shift, and go to state 7


State 7

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC . STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    STATIC  shift, and go to state 8


State 8

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC . VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    VOID  shift, and go to state 9


State 9

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID . MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    MAIN  shift, and go to state 10


State 10

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN . OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    OPEN_PARENTHESES  shift, and go to state 11


State 11

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES . STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    STRING  shift, and go to state 12


State 12

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING . OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    OPEN_BRACKET  shift, and go to state 13


State 13

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET . CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    CLOSED_BRACKET  shift, and go to state 14


State 14

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET . ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    ID  shift, and go to state 15


State 15

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID . CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    CLOSED_PARENTHESES  shift, and go to state 16


State 16

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES . OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY

    OPEN_CURLY  shift, and go to state 17


State 17

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY . StatementList CLOSED_CURLY CLOSED_CURLY

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 14 (StatementList)

    VarDecl        go to state 27
    PrimeType      go to state 28
    Type           go to state 29
    StatementList  go to state 30
    Statement      go to state 31
    LeftValue      go to state 32


State 18

    9 PrimeType: BOOLEAN .

    $default  reduce using rule 9 (PrimeType)


State 19

   21 Statement: IF . OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement ELSE Statement

    OPEN_PARENTHESES  shift, and go to state 33


State 20

    8 PrimeType: INT .

    $default  reduce using rule 8 (PrimeType)


State 21

   23 Statement: OPEN_CURLY . StatementList CLOSED_CURLY

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 14 (StatementList)

    VarDecl        go to state 27
    PrimeType      go to state 28
    Type           go to state 29
    StatementList  go to state 34
    Statement      go to state 31
    LeftValue      go to state 32


State 22

   10 PrimeType: STRING .

    $default  reduce using rule 10 (PrimeType)


State 23

   17 Statement: SYSTEM_OUT_PRINT . OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 35


State 24

   16 Statement: SYSTEM_OUT_PRINTLN . OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON

    OPEN_PARENTHESES  shift, and go to state 36


State 25

   22 Statement: WHILE . OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement

    OPEN_PARENTHESES  shift, and go to state 37


State 26

   12 Type: ID .
   19 Statement: ID . EQUALS Exp SEMICOLON
   56 LeftValue: ID . Index

    EQUALS        shift, and go to state 38
    OPEN_BRACKET  shift, and go to state 39

    OPEN_BRACKET  [reduce using rule 12 (Type)]
    $default      reduce using rule 12 (Type)

    Index  go to state 40


State 27

   18 Statement: VarDecl .

    $default  reduce using rule 18 (Statement)


State 28

   11 Type: PrimeType .

    $default  reduce using rule 11 (Type)


State 29

    3 VarDecl: Type . ID VarInit VarDeclTail SEMICOLON
   13 Type: Type . OPEN_BRACKET CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 41
    ID            shift, and go to state 42


State 30

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList . CLOSED_CURLY CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 43


State 31

   15 StatementList: Statement . StatementList

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    $default  reduce using rule 14 (StatementList)

    VarDecl        go to state 27
    PrimeType      go to state 28
    Type           go to state 29
    StatementList  go to state 44
    Statement      go to state 31
    LeftValue      go to state 32


State 32

   20 Statement: LeftValue . EQUALS Exp SEMICOLON

    EQUALS  shift, and go to state 45


State 33

   21 Statement: IF OPEN_PARENTHESES . Exp CLOSED_PARENTHESES Statement ELSE Statement

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 55
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 34

   23 Statement: OPEN_CURLY StatementList . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 65


State 35

   17 Statement: SYSTEM_OUT_PRINT OPEN_PARENTHESES . Exp CLOSED_PARENTHESES SEMICOLON

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 66
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 36

   16 Statement: SYSTEM_OUT_PRINTLN OPEN_PARENTHESES . Exp CLOSED_PARENTHESES SEMICOLON

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 67
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 37

   22 Statement: WHILE OPEN_PARENTHESES . Exp CLOSED_PARENTHESES Statement

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 68
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 38

   19 Statement: ID EQUALS . Exp SEMICOLON

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 69
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 39

   57 Index: OPEN_BRACKET . Exp CLOSED_BRACKET

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 70
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 40

   56 LeftValue: ID Index .
   58 Index: Index . OPEN_BRACKET Exp CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 71

    $default  reduce using rule 56 (LeftValue)


State 41

   13 Type: Type OPEN_BRACKET . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 72


State 42

    3 VarDecl: Type ID . VarInit VarDeclTail SEMICOLON

    EQUALS  shift, and go to state 73

    $default  reduce using rule 4 (VarInit)

    VarInit  go to state 74


State 43

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY . CLOSED_CURLY

    CLOSED_CURLY  shift, and go to state 75


State 44

   15 StatementList: Statement StatementList .

    $default  reduce using rule 15 (StatementList)


State 45

   20 Statement: LeftValue EQUALS . Exp SEMICOLON

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 76
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 46

   55 Factor: FALSE .

    $default  reduce using rule 55 (Factor)


State 47

   44 UnaryExp: MINUS . Factor

    FALSE             shift, and go to state 46
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Factor     go to state 77
    LeftValue  go to state 64


State 48

   49 Factor: NEW . PrimeType Index

    BOOLEAN  shift, and go to state 18
    INT      shift, and go to state 20
    STRING   shift, and go to state 22

    PrimeType  go to state 78


State 49

   46 Factor: OPEN_PARENTHESES . Exp CLOSED_PARENTHESES

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 79
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 50

   43 UnaryExp: PLUS . Factor

    FALSE             shift, and go to state 46
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Factor     go to state 80
    LeftValue  go to state 64


State 51

   54 Factor: TRUE .

    $default  reduce using rule 54 (Factor)


State 52

   53 Factor: INTEGER_LITERAL .

    $default  reduce using rule 53 (Factor)


State 53

   52 Factor: STRING_LITERAL .

    $default  reduce using rule 52 (Factor)


State 54

   47 Factor: ID .
   51       | ID . DOT LENGTH
   56 LeftValue: ID . Index

    DOT           shift, and go to state 81
    OPEN_BRACKET  shift, and go to state 39

    $default  reduce using rule 47 (Factor)

    Index  go to state 40


State 55

   21 Statement: IF OPEN_PARENTHESES Exp . CLOSED_PARENTHESES Statement ELSE Statement

    CLOSED_PARENTHESES  shift, and go to state 82


State 56

   24 Exp: LogicalOrExp .
   25 LogicalOrExp: LogicalOrExp . OR LogicalAndExp

    OR  shift, and go to state 83

    $default  reduce using rule 24 (Exp)


State 57

   26 LogicalOrExp: LogicalAndExp .
   27 LogicalAndExp: LogicalAndExp . AND EqualityExp

    AND  shift, and go to state 84

    $default  reduce using rule 26 (LogicalOrExp)


State 58

   28 LogicalAndExp: EqualityExp .
   29 EqualityExp: EqualityExp . EQUAL_EQUAL RelationalExp
   30            | EqualityExp . NOT_EQUAL RelationalExp

    EQUAL_EQUAL  shift, and go to state 85
    NOT_EQUAL    shift, and go to state 86

    $default  reduce using rule 28 (LogicalAndExp)


State 59

   31 EqualityExp: RelationalExp .
   32 RelationalExp: RelationalExp . GREATER AdditiveExp
   33              | RelationalExp . GREATER_EQUAL AdditiveExp
   34              | RelationalExp . LESS AdditiveExp
   35              | RelationalExp . LESS_EQUAL AdditiveExp

    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    LESS           shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 31 (EqualityExp)


State 60

   36 RelationalExp: AdditiveExp .
   37 AdditiveExp: AdditiveExp . PLUS MultiplicativeExp
   38            | AdditiveExp . MINUS MultiplicativeExp

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92

    $default  reduce using rule 36 (RelationalExp)


State 61

   39 AdditiveExp: MultiplicativeExp .
   40 MultiplicativeExp: MultiplicativeExp . MULTIPLY UnaryExp
   41                  | MultiplicativeExp . DIVIDE UnaryExp

    DIVIDE    shift, and go to state 93
    MULTIPLY  shift, and go to state 94

    $default  reduce using rule 39 (AdditiveExp)


State 62

   42 MultiplicativeExp: UnaryExp .

    $default  reduce using rule 42 (MultiplicativeExp)


State 63

   45 UnaryExp: Factor .

    $default  reduce using rule 45 (UnaryExp)


State 64

   48 Factor: LeftValue .
   50       | LeftValue . DOT LENGTH

    DOT  shift, and go to state 95

    $default  reduce using rule 48 (Factor)


State 65

   23 Statement: OPEN_CURLY StatementList CLOSED_CURLY .

    $default  reduce using rule 23 (Statement)


State 66

   17 Statement: SYSTEM_OUT_PRINT OPEN_PARENTHESES Exp . CLOSED_PARENTHESES SEMICOLON

    CLOSED_PARENTHESES  shift, and go to state 96


State 67

   16 Statement: SYSTEM_OUT_PRINTLN OPEN_PARENTHESES Exp . CLOSED_PARENTHESES SEMICOLON

    CLOSED_PARENTHESES  shift, and go to state 97


State 68

   22 Statement: WHILE OPEN_PARENTHESES Exp . CLOSED_PARENTHESES Statement

    CLOSED_PARENTHESES  shift, and go to state 98


State 69

   19 Statement: ID EQUALS Exp . SEMICOLON

    SEMICOLON  shift, and go to state 99


State 70

   57 Index: OPEN_BRACKET Exp . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 100


State 71

   58 Index: Index OPEN_BRACKET . Exp CLOSED_BRACKET

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 101
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 72

   13 Type: Type OPEN_BRACKET CLOSED_BRACKET .

    $default  reduce using rule 13 (Type)


State 73

    5 VarInit: EQUALS . Exp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    Exp                go to state 102
    LogicalOrExp       go to state 56
    LogicalAndExp      go to state 57
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 74

    3 VarDecl: Type ID VarInit . VarDeclTail SEMICOLON

    COMMA  shift, and go to state 103

    $default  reduce using rule 6 (VarDeclTail)

    VarDeclTail  go to state 104


State 75

    2 MainClass: CLASS ID OPEN_CURLY PUBLIC STATIC VOID MAIN OPEN_PARENTHESES STRING OPEN_BRACKET CLOSED_BRACKET ID CLOSED_PARENTHESES OPEN_CURLY StatementList CLOSED_CURLY CLOSED_CURLY .

    $default  reduce using rule 2 (MainClass)


State 76

   20 Statement: LeftValue EQUALS Exp . SEMICOLON

    SEMICOLON  shift, and go to state 105


State 77

   44 UnaryExp: MINUS Factor .

    $default  reduce using rule 44 (UnaryExp)


State 78

   49 Factor: NEW PrimeType . Index

    OPEN_BRACKET  shift, and go to state 39

    Index  go to state 106


State 79

   46 Factor: OPEN_PARENTHESES Exp . CLOSED_PARENTHESES

    CLOSED_PARENTHESES  shift, and go to state 107


State 80

   43 UnaryExp: PLUS Factor .

    $default  reduce using rule 43 (UnaryExp)


State 81

   51 Factor: ID DOT . LENGTH

    LENGTH  shift, and go to state 108


State 82

   21 Statement: IF OPEN_PARENTHESES Exp CLOSED_PARENTHESES . Statement ELSE Statement

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    VarDecl    go to state 27
    PrimeType  go to state 28
    Type       go to state 29
    Statement  go to state 109
    LeftValue  go to state 32


State 83

   25 LogicalOrExp: LogicalOrExp OR . LogicalAndExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    LogicalAndExp      go to state 110
    EqualityExp        go to state 58
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 84

   27 LogicalAndExp: LogicalAndExp AND . EqualityExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    EqualityExp        go to state 111
    RelationalExp      go to state 59
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 85

   29 EqualityExp: EqualityExp EQUAL_EQUAL . RelationalExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    RelationalExp      go to state 112
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 86

   30 EqualityExp: EqualityExp NOT_EQUAL . RelationalExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    RelationalExp      go to state 113
    AdditiveExp        go to state 60
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 87

   32 RelationalExp: RelationalExp GREATER . AdditiveExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    AdditiveExp        go to state 114
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 88

   33 RelationalExp: RelationalExp GREATER_EQUAL . AdditiveExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    AdditiveExp        go to state 115
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 89

   34 RelationalExp: RelationalExp LESS . AdditiveExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    AdditiveExp        go to state 116
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 90

   35 RelationalExp: RelationalExp LESS_EQUAL . AdditiveExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    AdditiveExp        go to state 117
    MultiplicativeExp  go to state 61
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 91

   38 AdditiveExp: AdditiveExp MINUS . MultiplicativeExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    MultiplicativeExp  go to state 118
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 92

   37 AdditiveExp: AdditiveExp PLUS . MultiplicativeExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    MultiplicativeExp  go to state 119
    UnaryExp           go to state 62
    Factor             go to state 63
    LeftValue          go to state 64


State 93

   41 MultiplicativeExp: MultiplicativeExp DIVIDE . UnaryExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    UnaryExp   go to state 120
    Factor     go to state 63
    LeftValue  go to state 64


State 94

   40 MultiplicativeExp: MultiplicativeExp MULTIPLY . UnaryExp

    FALSE             shift, and go to state 46
    MINUS             shift, and go to state 47
    NEW               shift, and go to state 48
    OPEN_PARENTHESES  shift, and go to state 49
    PLUS              shift, and go to state 50
    TRUE              shift, and go to state 51
    INTEGER_LITERAL   shift, and go to state 52
    STRING_LITERAL    shift, and go to state 53
    ID                shift, and go to state 54

    UnaryExp   go to state 121
    Factor     go to state 63
    LeftValue  go to state 64


State 95

   50 Factor: LeftValue DOT . LENGTH

    LENGTH  shift, and go to state 122


State 96

   17 Statement: SYSTEM_OUT_PRINT OPEN_PARENTHESES Exp CLOSED_PARENTHESES . SEMICOLON

    SEMICOLON  shift, and go to state 123


State 97

   16 Statement: SYSTEM_OUT_PRINTLN OPEN_PARENTHESES Exp CLOSED_PARENTHESES . SEMICOLON

    SEMICOLON  shift, and go to state 124


State 98

   22 Statement: WHILE OPEN_PARENTHESES Exp CLOSED_PARENTHESES . Statement

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    VarDecl    go to state 27
    PrimeType  go to state 28
    Type       go to state 29
    Statement  go to state 125
    LeftValue  go to state 32


State 99

   19 Statement: ID EQUALS Exp SEMICOLON .

    $default  reduce using rule 19 (Statement)


State 100

   57 Index: OPEN_BRACKET Exp CLOSED_BRACKET .

    $default  reduce using rule 57 (Index)


State 101

   58 Index: Index OPEN_BRACKET Exp . CLOSED_BRACKET

    CLOSED_BRACKET  shift, and go to state 126


State 102

    5 VarInit: EQUALS Exp .

    $default  reduce using rule 5 (VarInit)


State 103

    7 VarDeclTail: COMMA . ID VarInit VarDeclTail

    ID  shift, and go to state 127


State 104

    3 VarDecl: Type ID VarInit VarDeclTail . SEMICOLON

    SEMICOLON  shift, and go to state 128


State 105

   20 Statement: LeftValue EQUALS Exp SEMICOLON .

    $default  reduce using rule 20 (Statement)


State 106

   49 Factor: NEW PrimeType Index .
   58 Index: Index . OPEN_BRACKET Exp CLOSED_BRACKET

    OPEN_BRACKET  shift, and go to state 71

    $default  reduce using rule 49 (Factor)


State 107

   46 Factor: OPEN_PARENTHESES Exp CLOSED_PARENTHESES .

    $default  reduce using rule 46 (Factor)


State 108

   51 Factor: ID DOT LENGTH .

    $default  reduce using rule 51 (Factor)


State 109

   21 Statement: IF OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement . ELSE Statement

    ELSE  shift, and go to state 129


State 110

   25 LogicalOrExp: LogicalOrExp OR LogicalAndExp .
   27 LogicalAndExp: LogicalAndExp . AND EqualityExp

    AND  shift, and go to state 84

    $default  reduce using rule 25 (LogicalOrExp)


State 111

   27 LogicalAndExp: LogicalAndExp AND EqualityExp .
   29 EqualityExp: EqualityExp . EQUAL_EQUAL RelationalExp
   30            | EqualityExp . NOT_EQUAL RelationalExp

    EQUAL_EQUAL  shift, and go to state 85
    NOT_EQUAL    shift, and go to state 86

    $default  reduce using rule 27 (LogicalAndExp)


State 112

   29 EqualityExp: EqualityExp EQUAL_EQUAL RelationalExp .
   32 RelationalExp: RelationalExp . GREATER AdditiveExp
   33              | RelationalExp . GREATER_EQUAL AdditiveExp
   34              | RelationalExp . LESS AdditiveExp
   35              | RelationalExp . LESS_EQUAL AdditiveExp

    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    LESS           shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 29 (EqualityExp)


State 113

   30 EqualityExp: EqualityExp NOT_EQUAL RelationalExp .
   32 RelationalExp: RelationalExp . GREATER AdditiveExp
   33              | RelationalExp . GREATER_EQUAL AdditiveExp
   34              | RelationalExp . LESS AdditiveExp
   35              | RelationalExp . LESS_EQUAL AdditiveExp

    GREATER        shift, and go to state 87
    GREATER_EQUAL  shift, and go to state 88
    LESS           shift, and go to state 89
    LESS_EQUAL     shift, and go to state 90

    $default  reduce using rule 30 (EqualityExp)


State 114

   32 RelationalExp: RelationalExp GREATER AdditiveExp .
   37 AdditiveExp: AdditiveExp . PLUS MultiplicativeExp
   38            | AdditiveExp . MINUS MultiplicativeExp

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92

    $default  reduce using rule 32 (RelationalExp)


State 115

   33 RelationalExp: RelationalExp GREATER_EQUAL AdditiveExp .
   37 AdditiveExp: AdditiveExp . PLUS MultiplicativeExp
   38            | AdditiveExp . MINUS MultiplicativeExp

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92

    $default  reduce using rule 33 (RelationalExp)


State 116

   34 RelationalExp: RelationalExp LESS AdditiveExp .
   37 AdditiveExp: AdditiveExp . PLUS MultiplicativeExp
   38            | AdditiveExp . MINUS MultiplicativeExp

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92

    $default  reduce using rule 34 (RelationalExp)


State 117

   35 RelationalExp: RelationalExp LESS_EQUAL AdditiveExp .
   37 AdditiveExp: AdditiveExp . PLUS MultiplicativeExp
   38            | AdditiveExp . MINUS MultiplicativeExp

    MINUS  shift, and go to state 91
    PLUS   shift, and go to state 92

    $default  reduce using rule 35 (RelationalExp)


State 118

   38 AdditiveExp: AdditiveExp MINUS MultiplicativeExp .
   40 MultiplicativeExp: MultiplicativeExp . MULTIPLY UnaryExp
   41                  | MultiplicativeExp . DIVIDE UnaryExp

    DIVIDE    shift, and go to state 93
    MULTIPLY  shift, and go to state 94

    $default  reduce using rule 38 (AdditiveExp)


State 119

   37 AdditiveExp: AdditiveExp PLUS MultiplicativeExp .
   40 MultiplicativeExp: MultiplicativeExp . MULTIPLY UnaryExp
   41                  | MultiplicativeExp . DIVIDE UnaryExp

    DIVIDE    shift, and go to state 93
    MULTIPLY  shift, and go to state 94

    $default  reduce using rule 37 (AdditiveExp)


State 120

   41 MultiplicativeExp: MultiplicativeExp DIVIDE UnaryExp .

    $default  reduce using rule 41 (MultiplicativeExp)


State 121

   40 MultiplicativeExp: MultiplicativeExp MULTIPLY UnaryExp .

    $default  reduce using rule 40 (MultiplicativeExp)


State 122

   50 Factor: LeftValue DOT LENGTH .

    $default  reduce using rule 50 (Factor)


State 123

   17 Statement: SYSTEM_OUT_PRINT OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON .

    $default  reduce using rule 17 (Statement)


State 124

   16 Statement: SYSTEM_OUT_PRINTLN OPEN_PARENTHESES Exp CLOSED_PARENTHESES SEMICOLON .

    $default  reduce using rule 16 (Statement)


State 125

   22 Statement: WHILE OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement .

    $default  reduce using rule 22 (Statement)


State 126

   58 Index: Index OPEN_BRACKET Exp CLOSED_BRACKET .

    $default  reduce using rule 58 (Index)


State 127

    7 VarDeclTail: COMMA ID . VarInit VarDeclTail

    EQUALS  shift, and go to state 73

    $default  reduce using rule 4 (VarInit)

    VarInit  go to state 130


State 128

    3 VarDecl: Type ID VarInit VarDeclTail SEMICOLON .

    $default  reduce using rule 3 (VarDecl)


State 129

   21 Statement: IF OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement ELSE . Statement

    BOOLEAN             shift, and go to state 18
    IF                  shift, and go to state 19
    INT                 shift, and go to state 20
    OPEN_CURLY          shift, and go to state 21
    STRING              shift, and go to state 22
    SYSTEM_OUT_PRINT    shift, and go to state 23
    SYSTEM_OUT_PRINTLN  shift, and go to state 24
    WHILE               shift, and go to state 25
    ID                  shift, and go to state 26

    VarDecl    go to state 27
    PrimeType  go to state 28
    Type       go to state 29
    Statement  go to state 131
    LeftValue  go to state 32


State 130

    7 VarDeclTail: COMMA ID VarInit . VarDeclTail

    COMMA  shift, and go to state 103

    $default  reduce using rule 6 (VarDeclTail)

    VarDeclTail  go to state 132


State 131

   21 Statement: IF OPEN_PARENTHESES Exp CLOSED_PARENTHESES Statement ELSE Statement .

    $default  reduce using rule 21 (Statement)


State 132

    7 VarDeclTail: COMMA ID VarInit VarDeclTail .

    $default  reduce using rule 7 (VarDeclTail)
